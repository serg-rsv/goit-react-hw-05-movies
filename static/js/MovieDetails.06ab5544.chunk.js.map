{"version":3,"file":"static/js/MovieDetails.06ab5544.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetailsStyled.js","components/MovieDetails/MovieDetails.jsx","services/tmdb-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst MovieImg = styled.img`\n  height: 300px;\n`;\n\nconst MovieCard = styled.div`\n  display: flex;\n  gap: 12px;\n\n  div {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n  }\n`;\n\nexport { MovieImg, MovieCard };\n","import { Loading } from 'components/Loading/Loading';\nimport { useState, useEffect, Suspense } from 'react';\nimport {\n  Link,\n  useParams,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport * as api from 'services/tmdb-api';\n\nimport {\n  MovieImg,\n  MovieCard,\n} from 'components/MovieDetails/MovieDetailsStyled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams('movieId');\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  const { title, releaseYear, poster, overview, genres, userScore } =\n    movie ?? {};\n\n  useEffect(() => {\n    api.getMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  const handleBack = () => {\n    navigate(backLinkHref);\n  };\n\n  return (\n    <>\n      <button type=\"button\" onClick={handleBack}>\n        â®œ Go back\n      </button>\n      {movie && (\n        <div>\n          <MovieCard>\n            <MovieImg src={poster} alt={title} />\n            <div>\n              <h2>\n                {title}({releaseYear})\n              </h2>\n              <p>User score: {userScore}%</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <p>{genres.map(({ name }) => name).join(' ')}</p>\n            </div>\n          </MovieCard>\n          <hr />\n\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <Link to={'cast'} state={{ from: location?.state?.from }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to={'reviews'} state={{ from: location?.state?.from }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <hr />\n          <Suspense fallback={<Loading />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport photoHolder from 'images/ava.jpg';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n// https://image.tmdb.org/t/p/w400/kqjL17yufvn9OVLyXYpvtyrFfak.jpg\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w300';\nconst API_KEY = '5ce599886a4c0703a030654068991e03';\n\naxios.defaults.baseURL = BASE_URL;\n\nconst getTrendingMovies = () => {\n  return axios\n    .get(`/trending/movie/day?api_key=${API_KEY}&page=1`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title }) => ({ id, title }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nconst getSearchMovies = query => {\n  return axios\n    .get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`\n    )\n    .then(({ data: { results } }) =>\n      results.map(({ id, title }) => ({ id, title }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nconst getMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?api_key=${API_KEY}`)\n    .then(\n      ({\n        data: {\n          id,\n          title,\n          release_date: releaseYear,\n          poster_path: poster,\n          overview,\n          genres,\n          vote_average: userScore,\n        },\n      }) => ({\n        id,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        poster: IMAGE_URL + poster,\n        overview,\n        genres,\n        userScore: Math.round(userScore * 10),\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nconst getMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMAGE_URL + photo : photoHolder,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nconst getMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({ id, author, content }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["MovieImg","styled","MovieCard","useState","movie","setMovie","movieId","useParams","location","useLocation","navigate","useNavigate","backLinkHref","state","from","title","releaseYear","poster","overview","genres","userScore","useEffect","api","then","type","onClick","src","alt","map","name","join","to","Suspense","fallback","Loading","IMAGE_URL","API_KEY","axios","getTrendingMovies","data","results","id","catch","error","console","log","message","getSearchMovies","query","getMovieDetails","release_date","poster_path","vote_average","Date","getFullYear","Math","round","getMovieCredits","cast","character","photo","profile_path","photoHolder","getMovieReviews","author","content"],"sourceRoot":""}